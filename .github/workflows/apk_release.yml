name: Android Release Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build Android Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Decode Keystore to app directory
        run: |
          mkdir -p app
          echo "${{ secrets.FEED_FLOW }}" | base64 --decode > app/feedflow.jks

      - name: Create keystore.properties inside app directory
        run: |
          echo storeFile=feedflow.jks > app/keystore.properties
          echo storePassword=${KEYSTORE_PASSWORD} >> app/keystore.properties
          echo keyAlias=${KEY_ALIAS} >> app/keystore.properties
          echo keyPassword=${KEY_PASSWORD} >> app/keystore.properties
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build release APK
        run: ./gradlew assembleRelease --stacktrace

      - name: Debug - List build outputs
        run: ls -R app/build/outputs

      - name: Get versionCode from build.gradle.kts
        id: version
        run: |
          VERSION_CODE=$(grep 'versionCode =' app/build.gradle.kts | awk '{print $3}')
          VERSION_NAME=$(grep 'versionName =' app/build.gradle.kts | awk -F'"' '{print $2}')
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Rename APK with versionCode
        run: |
          mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/FeedFlow_${{ env.VERSION_CODE }}.apk

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ env.VERSION_NAME }}
          tag_name: v${{ env.VERSION_NAME }}-${{ env.VERSION_CODE }}
          files: app/build/outputs/apk/release/FeedFlow_${{ env.VERSION_CODE }}.apk

        env:
          GITHUB_TOKEN: ${{ secrets.APP_TOKEN_GITHUB }}